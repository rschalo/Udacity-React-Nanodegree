{"version":3,"sources":["BooksAPI.js","BookshelfChanger.js","Book.js","Bookshelf.js","Bookshelves.js","SearchResults.js","Search.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","books","BookshelfChanger","state","value","_this","props","handleChange","event","target","setState","sortBooks","react_default","a","createElement","className","defaultValue","onChange","this","disabled","Component","Book","_this$props","style","width","height","backgroundImage","imageLinks","thumbnail","src_BookshelfChanger","title","authors","join","Bookshelf","bookshelfName","length","undefined","map","src_Book","key","Bookshelves","src_Bookshelf","currentlyReading","wantToRead","read","react_router_dom","to","SearchResults","searchBooks","Search","e","searchNewBooks","resetSearch","console","log","onClick","type","placeholder","src_SearchResults","BooksApp","isLoaded","BooksAPI","prevState","filter","b","_this2","_this3","_this$state","react_router","exact","path","render","src_Bookshelves","src_Search","React","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.c640c9eb.chunk.js","sourcesContent":["const api = 'https://reactnd-books-api.udacity.com';\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token;\r\nif (!token)\r\n  token = localStorage.token = Math.random()\r\n    .toString(36)\r\n    .substr(-8);\r\n\r\nconst headers = {\r\n  Accept: 'application/json',\r\n  Authorization: token\r\n};\r\n\r\nexport const get = bookId =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book);\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books);\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json());\r\n\r\nexport const search = query =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  })\r\n    .then(res => res.json())\r\n    .then(data => data.books);\r\n","import React, { Component } from 'react';\r\n\r\nclass BookshelfChanger extends Component {\r\n  state = {\r\n    value: this.props.shelf,\r\n  };\r\n  handleChange = (event) => {\r\n    const { value } = event.target;\r\n    this.setState({ value });\r\n    this.props.sortBooks(this.props.book, value);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className='book-shelf-changer'>\r\n        {/* https://github.com/facebook/react/issues/2803#issuecomment-314426759 for handling a disabled select tag option\r\n       Default options, like 'Move...' need to have a value equal to the valid empty state for the select. \r\n       That way, React can associate the value attribute of the select and option tag to know what should be selected.*/}\r\n        <select defaultValue='' onChange={this.handleChange}>\r\n          <option value='' disabled>\r\n            Move...\r\n          </option>\r\n          <option value='currentlyReading'>Currently Reading</option>\r\n          <option value='wantToRead'>Want to Read</option>\r\n          <option value='read'>Read</option>\r\n          <option value='none'>None</option>\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BookshelfChanger;\r\n","import React, { Component } from 'react';\r\nimport BookshelfChanger from './BookshelfChanger';\r\n\r\nclass Book extends Component {\r\n  render() {\r\n    const { book, sortBooks, shelf } = this.props;\r\n\r\n    return (\r\n      <li>\r\n        <div className='book'>\r\n          <div className='book-top'>\r\n            <div\r\n              className='book-cover'\r\n              style={{\r\n                width: 128,\r\n                height: 193,\r\n                backgroundImage: `url(${book.imageLinks &&\r\n                  book.imageLinks.thumbnail})`,\r\n              }}\r\n            />\r\n            <BookshelfChanger sortBooks={sortBooks} book={book} shelf={shelf} />\r\n          </div>\r\n          <div className='book-title'>{book.title}</div>\r\n          <div className='book-authors'>\r\n            {book.authors ? book.authors.join(', ') : 'Unknown'}\r\n          </div>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Book;\r\n","import React, { Component } from 'react';\r\nimport Book from './Book';\r\n\r\nclass Bookshelf extends Component {\r\n  render() {\r\n    const { books, sortBooks, bookshelfName } = this.props;\r\n\r\n    return (\r\n      <div className='bookshelf'>\r\n        <h2 className='bookshelf-title'>{bookshelfName}</h2>\r\n        <div className='bookshelf-books'>\r\n          <ol className='books-grid'>\r\n            {books.length > 0 && books !== undefined ? (\r\n              books.map((book) => (\r\n                <Book\r\n                  key={book.id}\r\n                  book={book}\r\n                  shelf={book.shelf ? book.shelf : 'none'}\r\n                  sortBooks={sortBooks}\r\n                />\r\n              ))\r\n            ) : (\r\n              <div />\r\n            )}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Bookshelf;\r\n","import React, { Component } from 'react';\r\nimport Bookshelf from './Bookshelf';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Bookshelves extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='list-books'>\r\n          <div className='list-books-title'>\r\n            <h1>MyReads</h1>\r\n          </div>\r\n          <div>\r\n            <div className='list-books-content'>\r\n              <div>\r\n                <Bookshelf\r\n                  bookshelfName={'Currently Reading'}\r\n                  books={this.props.currentlyReading}\r\n                  sortBooks={this.props.sortBooks}\r\n                  shelf={'currentlyReading'}\r\n                />\r\n                <Bookshelf\r\n                  bookshelfName={'Want to Read'}\r\n                  books={this.props.wantToRead}\r\n                  sortBooks={this.props.sortBooks}\r\n                  shelf={'wantToRead'}\r\n                />\r\n                <Bookshelf\r\n                  bookshelfName={'Have Read'}\r\n                  books={this.props.read}\r\n                  sortBooks={this.props.sortBooks}\r\n                  shelf={'haveRead'}\r\n                />\r\n              </div>\r\n              <Link to='/search' className='open-search'>\r\n                <button>Add a Book</button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Bookshelves;\r\n","import React, { Component } from 'react';\r\nimport Book from './Book';\r\n\r\nclass SearchResults extends Component {\r\n  render() {\r\n    const { searchBooks, sortBooks } = this.props;\r\n    // TODO: fix \"cannot read property 'map' of undefined\" at line 8\r\n    // I think this is happening because searchBooks is defined as undefined when empty\r\n\r\n    return (\r\n      <div className='search-books-results'>\r\n        <ol className='books-grid'>\r\n          {searchBooks.length > 0 && searchBooks !== undefined ? (\r\n            searchBooks.map((book) => (\r\n              <Book\r\n                key={book.id}\r\n                book={book}\r\n                shelf={book.shelf ? book.shelf : 'none'}\r\n                sortBooks={sortBooks}\r\n              />\r\n            ))\r\n          ) : (\r\n            <div />\r\n          )}\r\n        </ol>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchResults;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SearchResults from './SearchResults';\r\n\r\nclass Search extends Component {\r\n  state = {\r\n    query: '',\r\n  };\r\n\r\n  //TODO: move searchbooks into app.js\r\n\r\n  /*\r\n  lifts searchbooks to app, now pass state with\r\n  searchbooks back down and pass to a search results component\r\n  */\r\n  // TODO: let's rewrite how searchbooks is defined in app.js\r\n  //searchBooks is receiving an undefined value and catching on .map\r\n  handleChange = (e) => {\r\n    const value = e.target.value;\r\n    if (value.length > 0) {\r\n      this.setState({ query: value }, () => {\r\n        this.props.searchNewBooks(value);\r\n      });\r\n    } else {\r\n      this.setState({ query: '' }, () => {\r\n        this.props.searchNewBooks(this.state.query);\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { query } = this.state;\r\n    const { searchBooks, sortBooks, books, resetSearch } = this.props;\r\n    console.log(searchBooks);\r\n\r\n    return (\r\n      <div className='search-books'>\r\n        <div className='search-books-bar'>\r\n          <Link to='/'>\r\n            <button className='close-search' onClick={resetSearch}>\r\n              Close\r\n            </button>\r\n          </Link>\r\n          <div className='search-books-input-wrapper'>\r\n            <input\r\n              type='text'\r\n              placeholder='Search by title or author'\r\n              value={query}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <SearchResults\r\n          searchBooks={searchBooks}\r\n          sortBooks={sortBooks}\r\n          books={books}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport * as BooksAPI from './BooksAPI';\r\nimport Bookshelves from './Bookshelves';\r\nimport Search from './Search.js';\r\nimport { Route } from 'react-router-dom';\r\n\r\nclass BooksApp extends React.Component {\r\n  state = {\r\n    books: [],\r\n    searchBooks: [],\r\n    isLoaded: false,\r\n  };\r\n\r\n  // initial set state for user's existing books\r\n  componentDidMount() {\r\n    BooksAPI.getAll().then((books) => {\r\n      this.setState(() => ({\r\n        books: books,\r\n        isLoaded: true,\r\n      }));\r\n    });\r\n  }\r\n\r\n  // Search.js provides the query value\r\n  searchNewBooks = (query) => {\r\n    if (query.length > 0) {\r\n      BooksAPI.search(query).then((books) => {\r\n        this.setState({ searchBooks: books });\r\n      });\r\n    } else {\r\n      this.setState({ searchBooks: {} });\r\n    }\r\n  };\r\n\r\n  // Bookshelf.js provides the book, shelf values\r\n  // If a book is updated on Bookshelf.js to 'none' then filter out of displayed results\r\n  // If a book is updated on Search.js, concat the book into books and display on Bookshelf.js\r\n  sortBooks = (book, shelf) => {\r\n    BooksAPI.update(book, shelf);\r\n    if (shelf === 'none') {\r\n      this.setState((prevState) => ({\r\n        books: prevState.books.filter((b) => b.id !== book.id),\r\n      }));\r\n    } else {\r\n      book.shelf = shelf;\r\n      this.setState((prevState) => ({\r\n        books: prevState.books.filter((b) => b.id !== book.id).concat(book),\r\n      }));\r\n    }\r\n  };\r\n\r\n  // Used in Search.js to clear searchBooks when a user closes the Search.js Route\r\n  resetSearch = () => {\r\n    this.setState({\r\n      searchBooks: [],\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { books, searchBooks } = this.state;\r\n    // filter out books by their state.book.shelf and pass as props\r\n    const currentlyReading = books.filter(\r\n      (b) => b.shelf === 'currentlyReading'\r\n    );\r\n    const wantToRead = books.filter((b) => b.shelf === 'wantToRead');\r\n    const read = books.filter((b) => b.shelf === 'read');\r\n\r\n    return (\r\n      <div className='app'>\r\n        <Route\r\n          exact\r\n          path='/'\r\n          render={() => (\r\n            <Bookshelves\r\n              currentlyReading={currentlyReading}\r\n              wantToRead={wantToRead}\r\n              read={read}\r\n              sortBooks={this.sortBooks}\r\n            />\r\n          )}\r\n        />\r\n        <Route\r\n          path='/search'\r\n          render={() => (\r\n            <Search\r\n              books={books}\r\n              searchNewBooks={this.searchNewBooks}\r\n              sortBooks={this.sortBooks}\r\n              resetSearch={this.resetSearch}\r\n              searchBooks={searchBooks}\r\n            />\r\n          )}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BooksApp;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}